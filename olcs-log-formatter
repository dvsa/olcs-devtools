#!/usr/bin/env python

import sys
import json

class colors:
    LIGHT_BLUE = '\033[1;34m'
    LIGHT_GREEN = '\033[1;32m'
    DARK_GREY_BG = '\033[100m'
    BLUE_BG = '\033[44m'

    BLUE_BG = '\033[44m'
    LIGHT_BLUE_BG = '\033[104m'
    LIGHT_RED_BG = '\033[101m'
    LIGHT_MAGENTA_BG = '\033[105m'
    GREEN_BG = '\033[42m'

    LIGHT_RED = '\033[91m'

    ERROR = '\033[41m'
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

while True:
    line = sys.stdin.readline()
    if not line:
        break
    try:
        out = json.dumps(json.loads(line), indent=2)
    except ValueError:
        # if line cannot be parsed as JSON, use as is
        out = line

    # highlight message
    out = out.replace('relevant-message', colors.BOLD + colors.UNDERLINE +'relevant-message'+ colors.ENDC)

    # Log priority names
    out = out.replace('DEBUG', colors.LIGHT_BLUE_BG +'DEBUG'+ colors.ENDC)
    out = out.replace('INFO', colors.BLUE_BG +'INFO'+ colors.ENDC)
    out = out.replace('NOTICE', colors.GREEN_BG +'NOTICE'+ colors.ENDC)
    out = out.replace('WARN', colors.LIGHT_MAGENTA_BG +'WARN'+ colors.ENDC)
    out = out.replace('ERR', colors.LIGHT_RED_BG +'ERR'+ colors.ENDC)
    out = out.replace('ERROR', colors.LIGHT_RED_BG +'ERROR'+ colors.ENDC)
    out = out.replace('CRIT', colors.LIGHT_RED_BG +'CRIT'+ colors.ENDC)
    out = out.replace('ALERT', colors.LIGHT_RED_BG +'ALERT'+ colors.ENDC)
    out = out.replace('EMERG', colors.LIGHT_RED_BG +'EMERG'+ colors.ENDC)

    # generally hightlight any error
    out = out.replace('error', colors.LIGHT_RED +'error'+ colors.ENDC)
    out = out.replace('Error', colors.LIGHT_RED +'Error'+ colors.ENDC)
    print out
